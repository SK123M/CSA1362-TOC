#include <stdio.h>
#include <stdlib.h>

#define MAX_STATES 100
#define MAX_SYMBOLS 20

int n, m;                                 // number of states and symbols
int epsilon[MAX_STATES][MAX_STATES];     // epsilon transitions
int closure[MAX_STATES][MAX_STATES];     // epsilon closure
int visited[MAX_STATES];                  // flag to keep track of visited states

// function to find epsilon closure for a given state
void epsilon_closure(int state) {
    visited[state] = 1;
    for (int i = 0; i < n; i++) {
        if (epsilon[state][i] && !visited[i]) {
            closure[state][i] = 1;
            epsilon_closure(i);
        }
    }
}

int main() {
    // read the number of states and symbols
    scanf("%d %d", &n, &m);

    // read the epsilon transitions
    int x, y;
    while (scanf("%d %d", &x, &y) == 2) {
        epsilon[x][y] = 1;
    }

    // find the epsilon closure for each state
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            visited[j] = 0;
        }
        epsilon_closure(i);
    }

    // print the epsilon closure
    for (int i = 0; i < n; i++) {
        printf("Epsilon closure of state %d: {", i);
        int first = 1;
        for (int j = 0; j < n; j++) {
            if (closure[i][j]) {
                if (!first) {
                    printf(", ");
                }
                first = 0;
                printf("%d", j);
            }
        }
        printf("}\n");
    }

    return 0;
}
